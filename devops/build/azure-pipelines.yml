# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: TerraformInstaller@1
  displayName: install Tearraform
  inputs:
    terraformVersion: 'latest'

- task: TerraformTaskV4@4
  displayName: terraform init AKS
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/devops/iac/TerraformAKS'
    backendAzureRmUseEnvironmentVariablesForAuthentication: false
    backendServiceArm: 'sagar-svc-conn'
    backendAzureRmResourceGroupName: 'Utkarsh-Pathak-rg'
    backendAzureRmStorageAccountName: 'akstasksa'
    backendAzureRmContainerName: 'akscontainer'
    backendAzureRmKey: 'terraform.tfstate'
- task: TerraformTaskV4@4
  displayName: terraform init ACR
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/devops/iac/terraformACR/'
    backendServiceArm: 'sagar-svc-conn'
    backendAzureRmResourceGroupName: 'Utkarsh-Pathak-rg'
    backendAzureRmStorageAccountName: 'akstasksa'
    backendAzureRmContainerName: 'akscontainer'
    backendAzureRmKey: 'terraform.tfstate'
- task: TerraformTaskV4@4
  displayName: terraform validate AKS
  inputs:
    provider: 'azurerm'
    command: 'validate'
    workingDirectory: './devops/iac/TerraformAKS/'
- task: TerraformTaskV4@4
  displayName: terraform validate ACR
  inputs:
    provider: 'azurerm'
    command: 'validate'
    workingDirectory: './devops/iac/terraformACR/'
- task: terraformplan@0
  displayName: terraform Plan AKS
  inputs:
    cwd: '$(System.DefaultWorkingDirectory)/devops/iac/TerraformAKS'
    useazurerm: true
    connectedServiceNameARM: 'sagar-svc-conn'
    usevarsfile: false
    usevars: false
    savePlanResult: true
    planOutput: 'tfplan'

- task: terraformplan@0
  displayName: terraform Plan ACR
  inputs:
    cwd: '$(System.DefaultWorkingDirectory)/devops/iac/terraformACR'
    useazurerm: true
    connectedServiceNameARM: 'sagar-svc-conn'
    usevarsfile: false
    usevars: false
    savePlanResult: true
    planOutput: 'tfplan'

- task: CopyFiles@2
  displayName: Copy .tf files
  inputs:
    sourceFolder: '$(System.DefaultWorkingDirectory)/devops/iac'
    contents: |
     **/*.tf
     **/tfplan
    targetFolder: '$(Build.ArtifactStagingDirectory)/tf-files'
    
- task: PublishPipelineArtifact@1
  displayName: Publish teraform .tf files
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/tf-files'
    artifact: 'utkarsh terraform pipeline'
    publishLocation: 'pipeline'
    